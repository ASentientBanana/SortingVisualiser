{"version":3,"sources":["contexts/algorithmContext/CurrentAlgoritmContext.tsx","components/navigation/NavigationBar.tsx","algorithms/SortingUtility.ts","components/canvas/Canvas.tsx","pages/canvasPage/CanvasPageGallery.tsx","App.tsx","index.tsx"],"names":["AlogorithmContext","createContext","AlgorithmProvider","props","useState","currentAlgorithm","setCurrentAlgorithm","Provider","value","children","NavigationBar","navDropdown","createRef","useContext","useEffect","className","href","data-target","ref","SortingUtility","time","Promise","resolve","setTimeout","array","i","j","updateColor","updateColor2","tmp","updateArray","length","this","sleep","swap","partition","arr","pivot","left","right","setCurrNum1","setCurrNum2","a","pivotValue","partitionIndex","quickSort","cnt","all","console","log","selectionSort","min","Canvas","alg","arrayState","canvasRef","currNum","setCurrNum","currNum2","setArray","clickState","useRef","sortedState","randArr","drawBars","ctx","canvasSize","randomArray","barSizeNormalizer","count","barWidth","x","fillStyle","fillRect","y","draw","useCallback","current","canvasContext","getContext","sizeOfCanvas","canvasProp","height","window","innerHeight","width","innerWidth","editBarHeight","canvas","heighestNumber","onClick","bubbleSort","then","res","algSelect","CanvasPageGallery","bubbleArray","selectionArray","quickArray","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e52fdbd6.chunk.js","sourcesContent":["import React, {useState,createContext} from 'react';\r\n\r\n\r\nexport const  AlogorithmContext = createContext<any>('');\r\nexport const AlgorithmProvider = (props:any) =>{\r\n    const [currentAlgorithm,setCurrentAlgorithm] = useState<string>('Bubble');\r\n    return(\r\n        <AlogorithmContext.Provider value={[currentAlgorithm,setCurrentAlgorithm]}>\r\n            {props.children}\r\n        </AlogorithmContext.Provider>\r\n    );\r\n}\r\n\r\n","import React, { useEffect, createRef, useContext } from 'react'\r\nimport './NavigationBar.css'\r\nimport M from 'materialize-css';\r\nimport { AlogorithmContext } from '../../contexts/algorithmContext/CurrentAlgoritmContext'\r\n\r\nfunction NavigationBar() {\r\n    const dropdowns = [\"Bubble\", \"Quick\"];\r\n    const navDropdown = createRef<HTMLAnchorElement>();\r\n    const [currentAlgorithm, setCurrentAlgorithm] = useContext<any>(AlogorithmContext);\r\n    const options = {\r\n        inDuration: 300,\r\n        outDuration: 300,\r\n        hover: true, // Activate on hover\r\n        coverTrigger: false, // Displays dropdown below the button\r\n    };\r\n    useEffect(() => {\r\n        // M.AutoInit();\r\n        // if (navDropdown.current != null) {\r\n        //     M.Dropdown.init(navDropdown.current, options)\r\n        // }\r\n    }, []);\r\n    return (\r\n        <div>\r\n            {/* <ul id=\"dropdown1\" className=\"dropdown-content \">\r\n                {dropdowns.map((alg, index) => (\r\n                    <li key={index} className=' nav-dropdown-elem ' onClick={() => {\r\n                        setCurrentAlgorithm(alg)\r\n                        console.log(currentAlgorithm)\r\n                    }} ><div>{alg} sort</div></li>\r\n                ))}\r\n                 <li><a  className='nav-dropdown-elem' href=\"#!\">three</a></li> \r\n            </ul> */}\r\n            <nav>\r\n                <div className=\"nav-wrapper\">\r\n                    <a href=\"#!\" className=\"brand-logo center\">Sorting Algorithm</a>\r\n                    <ul className=\"right hide-on-med-and-down\">\r\n                        {/* <li><a href=\"sass.html\">Sass</a></li>\r\n                        <li><a href=\"badges.html\">Components</a></li> */}\r\n                        <li><a className=\"dropdown-trigger\" href=\"#!\" data-target=\"dropdown1\" ref={navDropdown}>Chose an algorithm</a></li>\r\n                    </ul>\r\n                </div>\r\n            </nav>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default NavigationBar\r\n","import React from \"react\";\n\nclass SortingUtility {\n  static sleep(time: number = 0) {\n    return new Promise((resolve) => setTimeout(resolve, time));\n  }\n  static swap(\n    array: number[],\n    i: number,\n    j: number,\n    updateColor: Function,\n    updateColor2: Function\n  ) {\n    updateColor(i);\n    updateColor2(j);\n    let tmp = array[i];\n    array[i] = array[j];\n    array[j] = tmp;\n  }\n\n  static async bubbleSort(\n    array: number[],\n    updateArray: Function,\n    updateColor: Function,\n    updateColor2: Function\n  ) {\n    for (let i = 0; i < array.length; i++) {\n      for (let j = 0; j < array.length; j++) {\n        if (array[i] < array[j]) {\n          await this.sleep(2);\n          SortingUtility.swap(array, i, j, updateColor, updateColor2);\n          updateArray([...array]);\n        }\n      }\n    }\n    return array;\n  }\n\n  static partition = async (\n    arr: number[],\n    pivot: number,\n    left: number,\n    right: number,\n    updateArray: Function,\n    setCurrNum1: Function,\n    setCurrNum2: Function\n  ) => {\n    let pivotValue = arr[pivot],\n      partitionIndex = left;\n    for (let i = left; i < right; i++) {\n      if (arr[i] < pivotValue) {\n        SortingUtility.swap(arr, i, partitionIndex, setCurrNum1, setCurrNum2);\n        if (updateArray) updateArray([...(await arr)]);\n        await SortingUtility.sleep(2);\n        partitionIndex++;\n      }\n    }\n    SortingUtility.swap(arr, right, partitionIndex, setCurrNum1, setCurrNum2);\n    return partitionIndex;\n  };\n\n  static quickSort = async (\n    arr: number[],\n    left: number,\n    right: number,\n    updateArray: Function,\n    setCurrNum1: Function,\n    setCurrNum2: Function,\n    cnt: number\n  ) => {\n    if (left < right) {\n      const pivot = right;\n\n      const partitionIndex: number = await SortingUtility.partition(\n        arr,\n        pivot,\n        left,\n        right,\n        updateArray,\n        setCurrNum1,\n        setCurrNum2\n      );\n      await Promise.all([\n        SortingUtility.quickSort(\n          arr,\n          left,\n          partitionIndex - 1,\n          updateArray,\n          setCurrNum1,\n          setCurrNum2,\n          cnt++\n        ),\n        SortingUtility.quickSort(\n          arr,\n          partitionIndex + 1,\n          right,\n          updateArray,\n          setCurrNum1,\n          setCurrNum2,\n          cnt++\n        ),\n      ]);\n    }\n    if (cnt === 0) console.log(\"done\");\n\n    return await arr;\n  };\n\n  static selectionSort = async (\n    array: number[],\n    updateArray: Function,\n    setCurrNum1: Function,\n    setCurrNum2: Function\n  ) => {\n    for (let i = 0; i < array.length; i++) {\n      //set min to the current iteration of i\n      let min = i;\n      for (let j = i + 1; j < array.length; j++) {\n        if (array[j] < array[min]) {\n          min = j;\n        }\n      }\n      SortingUtility.swap(array, i, min, setCurrNum1, setCurrNum2);\n      await SortingUtility.sleep(2);\n      updateArray([...array]);\n    }\n    return array;\n  };\n}\nexport default SortingUtility;\n","import React, {\r\n  useEffect,\r\n  createRef,\r\n  useState,\r\n  useCallback,\r\n  useRef,\r\n} from \"react\";\r\nimport \"./Canvas.css\";\r\nimport SortingUtility from \"../../algorithms/SortingUtility\";\r\ninterface canvas {\r\n  alg: string;\r\n  arrayState: any;\r\n}\r\n\r\nconst Canvas = ({ alg, arrayState }: canvas) => {\r\n  const canvasRef = createRef<HTMLCanvasElement>();\r\n  const [currNum, setCurrNum] = useState(0);\r\n  const [currNum2, setCurrNum2] = useState(0);\r\n  const [array, setArray] = arrayState;\r\n  const clickState = useRef(true);\r\n  const sortedState = useRef(false);\r\n  const randArr = useRef([...array]);\r\n  const [rend, setRend] = useState(false);\r\n\r\n  //#region  Canvas Draw\r\n  const canvasSize = (canvasProp: HTMLCanvasElement) => {\r\n    canvasProp.height = window.innerHeight * 0.6;\r\n    canvasProp.width = window.innerWidth * 0.6;\r\n    return { x: canvasProp.width, y: canvasProp.height };\r\n  };\r\n  // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  const drawBars = (\r\n    ctx: CanvasRenderingContext2D,\r\n    canvasSize: any,\r\n    randomArray: number[],\r\n    barSizeNormalizer: number\r\n  ) => {\r\n    const count = randomArray.length;\r\n    const barWidth = canvasSize.x / count;\r\n    for (let i = 0; i < count; i++) {\r\n      if (i === currNum) {\r\n        ctx.fillStyle = \"red\";\r\n      } else if (i === currNum2) {\r\n        ctx.fillStyle = \"green\";\r\n      } else {\r\n        ctx.fillStyle = \"#eab354\";\r\n      }\r\n\r\n      ctx.fillRect(\r\n        i * barWidth,\r\n        canvasSize.y,\r\n        barWidth,\r\n        randomArray[i] * -barSizeNormalizer\r\n      );\r\n    }\r\n  };\r\n  const draw = useCallback(() => {\r\n    if (canvasRef.current) {\r\n      const canvasContext = canvasRef.current.getContext(\"2d\");\r\n      const sizeOfCanvas = canvasSize(canvasRef.current);\r\n      const barSizeNormalizer = editBarHeight(array, canvasRef.current);\r\n      if (canvasContext)\r\n        drawBars(canvasContext, sizeOfCanvas, array, barSizeNormalizer);\r\n    }\r\n  }, [array, canvasRef, drawBars]);\r\n  const editBarHeight = (randomArray: number[], canvas: HTMLCanvasElement) => {\r\n    let heighestNumber = 0;\r\n    for (let i = 0; i < randomArray.length; i++) {\r\n      if (randomArray[i] > heighestNumber) heighestNumber = randomArray[i];\r\n    }\r\n    return canvas.height / heighestNumber;\r\n  };\r\n  //#endregion\r\n\r\n  const algSelect = () => {\r\n    if (sortedState.current === true) {\r\n      setArray(randArr.current);\r\n    }\r\n    clickState.current = false;\r\n    switch (alg) {\r\n      case \"bubble\":\r\n        console.log(alg);\r\n        Promise.resolve(\r\n          SortingUtility.bubbleSort(array, setArray, setCurrNum, setCurrNum2)\r\n        ).then((res) => {\r\n          clickState.current = true;\r\n          sortedState.current = true;\r\n          setCurrNum(-1);\r\n          setCurrNum2(-1);\r\n          draw();\r\n        });\r\n        break;\r\n      case \"quick\":\r\n        console.log(alg);\r\n        let cnt = 0;\r\n        Promise.resolve(\r\n          SortingUtility.quickSort(\r\n            array,\r\n            0,\r\n            array.length - 1,\r\n            setArray,\r\n            setCurrNum,\r\n            setCurrNum2,\r\n            cnt\r\n          )\r\n        ).then((res) => {\r\n          clickState.current = true;\r\n          sortedState.current = true;\r\n          setCurrNum(-1);\r\n          setCurrNum2(-1);\r\n          draw();\r\n        });\r\n        break;\r\n      case \"selection\":\r\n        console.log(alg);\r\n        Promise.resolve(\r\n          SortingUtility.selectionSort(array, setArray, setCurrNum, setCurrNum2)\r\n        ).then((res) => {\r\n          clickState.current = true;\r\n          sortedState.current = true;\r\n          setCurrNum(-1);\r\n          setCurrNum2(-1);\r\n          draw();\r\n        });\r\n\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (canvasRef.current != null) draw();\r\n  }, [canvasRef]);\r\n  return (\r\n    <div className=\"canvas-container\">\r\n      <canvas\r\n        ref={canvasRef}\r\n        className=\"canvas\"\r\n        onClick={() => {\r\n          if (clickState.current) {\r\n            if (sortedState.current) {\r\n              setArray(randArr.current);\r\n              draw();\r\n              sortedState.current = false;\r\n            } else {\r\n              algSelect();\r\n            }\r\n          }\r\n        }}\r\n      ></canvas>\r\n      <h3 className=\"title-text\">Click to see {alg} sort</h3>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Canvas;\r\n","import React, { useState } from \"react\";\nimport Canvas from \"../../components/canvas/Canvas\";\n\nconst CanvasPageGallery = () => {\n  // const arr = [368, 799, 597, 36, 63, 995, 749, 180, 240, 663, 635, 487, 733, 854, 74, 258, 454, 938, 264, 611, 41, 498, 310, 943, 306, 790, 306, 782, 375, 22, 28, 390, 45, 130, 125, 466, 671, 332, 236, 68, 917, 958, 587, 795, 491, 520, 471, 538, 895, 126, 975, 421, 267, 490, 18, 186, 994, 929, 903, 827, 955, 319, 176, 237, 480, 875, 918, 308, 435, 786, 651, 811, 220, 717, 872, 170, 465, 514, 716, 653, 566, 468, 978, 162, 637, 872, 93, 317, 223, 662, 162, 418, 929, 144, 116, 846, 749, 681, 750, 397, 306, 440, 270, 286, 823, 744, 1000, 886, 482, 205, 523, 866, 81, 891, 488, 620, 157, 868, 188, 201, 516, 157, 420, 424, 241, 341, 87, 722, 468, 799, 867, 919, 319, 853, 39, 750, 969, 861, 315, 829, 293, 530, 877, 796, 352, 764, 675, 602, 679, 886, 834, 261, 977, 716, 664, 574, 192, 918, 75, 709, 511, 833, 112, 735, 602, 328, 120, 512, 722, 232, 586, 236, 420, 907, 755, 505, 847, 679, 592, 495, 889, 125, 808, 615, 280, 439, 385, 880, 311, 386, 384, 583, 925, 685, 818, 516, 654, 380, 905, 312];\n  const bubbleArray = useState([\n    368,\n    799,\n    597,\n    36,\n    63,\n    995,\n    749,\n    180,\n    240,\n    663,\n    635,\n    487,\n    733,\n    854,\n    74,\n    258,\n    454,\n    938,\n    264,\n    611,\n    41,\n    498,\n    310,\n    943,\n    306,\n    790,\n    306,\n    782,\n    375,\n    22,\n    28,\n    390,\n    45,\n    130,\n    125,\n    466,\n    671,\n    332,\n    236,\n    68,\n    917,\n    958,\n    587,\n    795,\n    491,\n    520,\n    471,\n    538,\n    895,\n    126,\n    975,\n    421,\n    267,\n    490,\n    18,\n    186,\n    994,\n    929,\n    903,\n    827,\n    955,\n    319,\n    176,\n    237,\n    480,\n    875,\n    918,\n    308,\n    435,\n    786,\n    651,\n    811,\n    220,\n    717,\n    872,\n    170,\n    465,\n    514,\n    716,\n    653,\n    566,\n    468,\n    978,\n    162,\n    637,\n    872,\n    93,\n    317,\n    223,\n    662,\n    162,\n    418,\n    929,\n    144,\n    116,\n    846,\n    749,\n    681,\n    750,\n    397,\n    306,\n    440,\n    270,\n    286,\n    823,\n    744,\n    1000,\n    886,\n    482,\n    205,\n    523,\n    866,\n    81,\n    891,\n    488,\n    620,\n    157,\n    868,\n    188,\n    201,\n    516,\n    157,\n    420,\n    424,\n    241,\n    341,\n    87,\n    722,\n    468,\n    799,\n    867,\n    919,\n    319,\n    853,\n    39,\n    750,\n    969,\n    861,\n    315,\n    829,\n    293,\n    530,\n    877,\n    796,\n    352,\n    764,\n    675,\n    602,\n    679,\n    886,\n    834,\n    261,\n    977,\n    716,\n    664,\n    574,\n    192,\n    918,\n    75,\n    709,\n    511,\n    833,\n    112,\n    735,\n    602,\n    328,\n    120,\n    512,\n    722,\n    232,\n    586,\n    236,\n    420,\n    907,\n    755,\n    505,\n    847,\n    679,\n    592,\n    495,\n    889,\n    125,\n    808,\n    615,\n    280,\n    439,\n    385,\n    880,\n    311,\n    386,\n    384,\n    583,\n    925,\n    685,\n    818,\n    516,\n    654,\n    380,\n    905,\n    312,\n  ]);\n  const selectionArray = useState([\n    368,\n    799,\n    597,\n    36,\n    63,\n    995,\n    749,\n    180,\n    240,\n    663,\n    635,\n    487,\n    733,\n    854,\n    74,\n    258,\n    454,\n    938,\n    264,\n    611,\n    41,\n    498,\n    310,\n    943,\n    306,\n    790,\n    306,\n    782,\n    375,\n    22,\n    28,\n    390,\n    45,\n    130,\n    125,\n    466,\n    671,\n    332,\n    236,\n    68,\n    917,\n    958,\n    587,\n    795,\n    491,\n    520,\n    471,\n    538,\n    895,\n    126,\n    975,\n    421,\n    267,\n    490,\n    18,\n    186,\n    994,\n    929,\n    903,\n    827,\n    955,\n    319,\n    176,\n    237,\n    480,\n    875,\n    918,\n    308,\n    435,\n    786,\n    651,\n    811,\n    220,\n    717,\n    872,\n    170,\n    465,\n    514,\n    716,\n    653,\n    566,\n    468,\n    978,\n    162,\n    637,\n    872,\n    93,\n    317,\n    223,\n    662,\n    162,\n    418,\n    929,\n    144,\n    116,\n    846,\n    749,\n    681,\n    750,\n    397,\n    306,\n    440,\n    270,\n    286,\n    823,\n    744,\n    1000,\n    886,\n    482,\n    205,\n    523,\n    866,\n    81,\n    891,\n    488,\n    620,\n    157,\n    868,\n    188,\n    201,\n    516,\n    157,\n    420,\n    424,\n    241,\n    341,\n    87,\n    722,\n    468,\n    799,\n    867,\n    919,\n    319,\n    853,\n    39,\n    750,\n    969,\n    861,\n    315,\n    829,\n    293,\n    530,\n    877,\n    796,\n    352,\n    764,\n    675,\n    602,\n    679,\n    886,\n    834,\n    261,\n    977,\n    716,\n    664,\n    574,\n    192,\n    918,\n    75,\n    709,\n    511,\n    833,\n    112,\n    735,\n    602,\n    328,\n    120,\n    512,\n    722,\n    232,\n    586,\n    236,\n    420,\n    907,\n    755,\n    505,\n    847,\n    679,\n    592,\n    495,\n    889,\n    125,\n    808,\n    615,\n    280,\n    439,\n    385,\n    880,\n    311,\n    386,\n    384,\n    583,\n    925,\n    685,\n    818,\n    516,\n    654,\n    380,\n    905,\n    312,\n  ]);\n  const quickArray = useState([\n    368,\n    799,\n    597,\n    36,\n    63,\n    995,\n    749,\n    180,\n    240,\n    663,\n    635,\n    487,\n    733,\n    854,\n    74,\n    258,\n    454,\n    938,\n    264,\n    611,\n    41,\n    498,\n    310,\n    943,\n    306,\n    790,\n    306,\n    782,\n    375,\n    22,\n    28,\n    390,\n    45,\n    130,\n    125,\n    466,\n    671,\n    332,\n    236,\n    68,\n    917,\n    958,\n    587,\n    795,\n    491,\n    520,\n    471,\n    538,\n    895,\n    126,\n    975,\n    421,\n    267,\n    490,\n    18,\n    186,\n    994,\n    929,\n    903,\n    827,\n    955,\n    319,\n    176,\n    237,\n    480,\n    875,\n    918,\n    308,\n    435,\n    786,\n    651,\n    811,\n    220,\n    717,\n    872,\n    170,\n    465,\n    514,\n    716,\n    653,\n    566,\n    468,\n    978,\n    162,\n    637,\n    872,\n    93,\n    317,\n    223,\n    662,\n    162,\n    418,\n    929,\n    144,\n    116,\n    846,\n    749,\n    681,\n    750,\n    397,\n    306,\n    440,\n    270,\n    286,\n    823,\n    744,\n    1000,\n    886,\n    482,\n    205,\n    523,\n    866,\n    81,\n    891,\n    488,\n    620,\n    157,\n    868,\n    188,\n    201,\n    516,\n    157,\n    420,\n    424,\n    241,\n    341,\n    87,\n    722,\n    468,\n    799,\n    867,\n    919,\n    319,\n    853,\n    39,\n    750,\n    969,\n    861,\n    315,\n    829,\n    293,\n    530,\n    877,\n    796,\n    352,\n    764,\n    675,\n    602,\n    679,\n    886,\n    834,\n    261,\n    977,\n    716,\n    664,\n    574,\n    192,\n    918,\n    75,\n    709,\n    511,\n    833,\n    112,\n    735,\n    602,\n    328,\n    120,\n    512,\n    722,\n    232,\n    586,\n    236,\n    420,\n    907,\n    755,\n    505,\n    847,\n    679,\n    592,\n    495,\n    889,\n    125,\n    808,\n    615,\n    280,\n    439,\n    385,\n    880,\n    311,\n    386,\n    384,\n    583,\n    925,\n    685,\n    818,\n    516,\n    654,\n    380,\n    905,\n    312,\n  ]);\n  return (\n    <div className=\"container \">\n      <Canvas alg=\"bubble\" arrayState={bubbleArray} />\n      <Canvas alg=\"selection\" arrayState={selectionArray} />\n      <Canvas alg=\"quick\" arrayState={quickArray} />\n    </div>\n  );\n};\nexport default CanvasPageGallery;\n","import React, { useEffect } from \"react\";\r\nimport \"materialize-css/dist/css/materialize.css\";\r\nimport NavigationBar from \"./components/navigation/NavigationBar\";\r\nimport { AlgorithmProvider } from \"./contexts/algorithmContext/CurrentAlgoritmContext\";\r\nimport \"./App.css\";\r\nimport CanvasPageGallery from './pages/canvasPage/CanvasPageGallery'\r\nconst App = () => {\r\n  return (\r\n    <div>\r\n      <AlgorithmProvider>\r\n        <NavigationBar />\r\n        <CanvasPageGallery />\r\n      </AlgorithmProvider>\r\n    </div>\r\n  );\r\n};\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}